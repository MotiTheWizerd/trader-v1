// This is your Prisma schema file
// Learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Ticker {
  id          String   @id @default(uuid())
  symbol      String   @unique
  name        String?
  exchange    String?
  sector      String?
  industry    String?
  description String?  @db.Text
  isActive    Boolean  @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // Relations
  marketData MarketData[]
  signals    Signal[]

  @@map("tickers")
}

model MarketData {
  id          String   @id @default(uuid())
  tickerId    String
  timestamp   DateTime
  open        Float
  high        Float
  low         Float
  close       Float
  volume      BigInt
  dividends   Float    @default(0)
  stockSplits Float    @default(0)
  source      String?  @default("yfinance")
  createdAt   DateTime @default(now())

  // Relations
  ticker Ticker @relation(fields: [tickerId], references: [id])

  @@unique([tickerId, timestamp])
  // Indexes
  @@index([tickerId])
  @@index([timestamp])
  @@index([tickerId, timestamp])
  @@map("market_data")
}

model Signal {
  id              String   @id @default(uuid())
  tickerId        String
  timestamp       DateTime
  open            Float
  high            Float
  low             Float
  close           Float
  volume          BigInt
  maShort         Float? // Moving average short term
  maLong          Float? // Moving average long term
  recentMax       Float? // Recent maximum price
  isPeakZone      Boolean  @default(false)
  signal          String // BUY, SELL, or STAY
  confidence      Float? // Confidence level of the signal (0-1)
  thresholdUsed   Float? // Threshold used for signal generation
  thresholdMethod String? // Method used for threshold calculation
  reasoning       String?  @db.Text // Explanation for the signal
  source          String?  @default("dynamic") // dynamic or fixed strategy
  createdAt       DateTime @default(now())

  // Relations
  ticker Ticker @relation(fields: [tickerId], references: [id])

  @@unique([tickerId, timestamp, source])
  // Indexes
  @@index([tickerId])
  @@index([timestamp])
  @@index([signal])
  @@index([tickerId, timestamp])
  @@map("signals")
}
